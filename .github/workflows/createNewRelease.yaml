name: Create New Release
on:
  workflow_dispatch:
    inputs:
      custom_tag:
        name: Set Release Tag Version
        description: "Enter version number for release tag below. Don't forget the v! Example: v2.23.9"
        type: string
        required: true
# Run all tests before making a release
jobs:
  test-for-release:
    uses: ./.github/workflows/testForRelease.yaml

# Create new release tag based upon user input
  create-tag:
    needs: test-for-release
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Update version and push tag
        uses: anothrNick/github-tag-action@1.55.0 # Don't use @master unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ github.event.inputs.custom_tag }}

# Create new release based upon the latest created tag
  build:
    name: Create Release
    needs: create-tag
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.custom_tag }}
          release_name: Release ${{ github.event.inputs.custom_tag }}
          body: |
            Changes in this Release

# Rebuild all containers for the new release
  build-containers-for-release:
    needs: build
    uses: ./.github/workflows/buildReleaseContainers.yaml

# Create updated docs for the latest release
  generate-and-update-docs:
    needs: build-containers-for-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Install poetry and dependencies
        run: |
          pip install poetry
          poetry install

      - name: Generate docs and move to docs branch
        run: |
          poetry run pdoc ./phdi -o ./docs/${{ github.event.inputs.custom_tag }}
          git checkout docs --
          rm -rf ./docs/latest
          cp -r ./docs/${{ github.event.inputs.custom_tag }} ./docs/latest

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated update of API docs for ${{ github.event.inputs.custom_tag }} release.
          branch: docs
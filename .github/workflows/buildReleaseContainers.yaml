name: Build Release Specific Containers

on:
  workflow_call:
    inputs:
      container-tag:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      container-tag:
        type: string
        required: true

jobs:
  list-containers:
    uses: ./.github/workflows/listContainers.yaml
  build:
    name: Build containers
    needs: list-containers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container-to-build: ${{fromJson(needs.list-containers.outputs.containers)}}
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
    steps:
      - name: Check Out Changes
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.container-tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          ref: ${{ inputs.container-tag }}
          images: ghcr.io/${{ github.repository }}/${{matrix.container-to-build}}
          # this sets the version for tags and labels for each of the containers to be
          # be the same as the version/tag where the code was pulled from
          tags: |
            type=semver,pattern={{raw}},value=${{ inputs.container-tag }}
            type=ref,event=branch
            type=ref,event=tag,pattern={{raw}},value=${{ inputs.container-tag }}
          labels: |
            org.opencontainers.image.version=${{ inputs.container-tag }}

      - name: Target phdi release in requirements.txt
        working-directory: ./containers/${{matrix.container-to-build}}
        run: |
          sed 's/phdi @ git+https:\/\/github.com\/CDCgov\/phdi.git@main/phdi @ git+https:\/\/github.com\/CDCgov\/phdi.git@${{ inputs.container-tag }}/g' requirements.txt > requirements_new.txt && mv requirements_new.txt requirements.txt

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./containers/${{matrix.container-to-build}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

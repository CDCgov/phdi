services:
  # PostgreSQL database
  db:
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
      - ./seed-scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./seed-scripts/.pgpass/:/usr/local/lib/.pgpass
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 20

  # Python seeding
  seed-db:
    build:
      context: "./seed-scripts"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
      - DATABASE_CONNECTION=db
      - DATABASE_PORT=5432
    depends_on:
      db:
        condition: service_healthy

  # Next.js app
  ecr-viewer:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./src/app:/app
    environment:
      - DATABASE_URL=postgres://postgres:pw@db:5432/ecr_viewer_db
    depends_on:
      seed-db:
        condition: service_completed_successfully
      db:
        condition: service_healthy
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: "jaeger"
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    ports:
      - "16686:16686" # serves frontend and queries
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9091"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prom_data:/prometheus"
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: "otel-collector"
    volumes:
      - "./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml"
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    ports:
      - "8898:8898" # Prometheus metrics exposed by collector
      - "8899:8899" # Endpoint prometheus will scrape
      - "4327:4327" # gRPC OTLP receiver
      - "4328:4328" # HTTP OTLP receiver
    depends_on:
      - jaeger
      - prometheus
volumes:
  prom_data:

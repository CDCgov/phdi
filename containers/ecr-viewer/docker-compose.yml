services:
  # PostgreSQL database
  db:
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
      - ./seed-scripts/sql/:/docker-entrypoint-initdb.d/
      - ./seed-scripts/sql/.pgpass/:/usr/local/lib/.pgpass
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 20

  # Next.js app
  ecr-viewer:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./src/app:/app
    environment:
      - DATABASE_URL=postgres://postgres:pw@db:5432/ecr_viewer_db
    depends_on:
      db:
        condition: service_healthy
#   jaeger:
#     image: jaegertracing/all-in-one:latest
#     container_name: "jaeger"
#     volumes:
#       - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
#     command: --query.ui-config /etc/jaeger/jaeger-ui.json
#     ports:
#       - "16686:16686" # serves frontend and queries
#       - "14268"
#       - "14250"
#   prometheus:
#     image: prom/prometheus:latest
#     ports:
#       - "9090:9090"
#     volumes:
#       - "./prometheus.yml:/etc/prometheus/prometheus.yml"
#       - "prom_data:/prometheus"
#   otel-collector:
#     image: otel/opentelemetry-collector-contrib:latest
#     container_name: "otel-collector"
#     volumes:
#       - "./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml"
#     command: ["--config=/etc/otelcol-contrib/config.yaml"]
#     ports:
#       - "8888:8888" # Prometheus metrics exposed by collector
#       - "8889:8889" # Endpoint prometheus will scrape
#       - "4317:4317" # gRPC OTLP receiver
#       - "4318:4318" # HTTP OTLP receiver
#     depends_on:
#       - jaeger
#       - prometheus
#   grafana:
#     image: grafana/grafana-oss
#     ports:
#       - "4000:3000"
#     volumes:
#       - ./grafana.ini:/etc/grafana/grafana.ini
#       - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
#       - ./grafana/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#       - grafana_data:/var/lib/grafana
#     depends_on:
#       - prometheus

# volumes:
# prom_data:
# grafana_data:

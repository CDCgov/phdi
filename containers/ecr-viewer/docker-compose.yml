version: '3.8'

services:
  # PostgreSQL database
  db:
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
#      - pgdata:/var/lib/postgresql/data
      - ./seed-scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./seed-scripts/fhir_example.sh:/docker-entrypoint-initdb.d/02-fhir_example.sh
      - ./seed-scripts/seed-database.py:/usr/local/lib/seed-database.py
      - ./seed-scripts/requirements.txt:/usr/local/lib/requirements.txt
      - ./seed-scripts/example_eicr_with_rr_data_with_person.json:/usr/local/lib/example_eicr_with_rr_data_with_person.json
      - ./seed-scripts/.pgpass/:/usr/local/lib/.pgpass
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 2s
      timeout: 5s
      retries: 20

   # Next.js app
  nextjs-app:
    container_name: ecr-viewer
    build: .
#      context: .
#      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./src/app:/app
    environment:
      - DATABASE_URL=postgres://postgres:pw@localhost:5432/ecr_viewer_db
    depends_on:
      db:
        condition: service_healthy

#volumes:
##  pgdata:
#  ./src/app:



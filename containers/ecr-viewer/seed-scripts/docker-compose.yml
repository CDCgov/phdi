services:
  orchestration-service:
    platform: linux/amd64
    build:
      context: ../../orchestration/
    depends_on:
      - fhir-converter-service
      - ingestion-service
      - message-parser-service
      - ecr-viewer
    ports:
      - "8080:8080"
    logging:
      driver: "json-file"
    env_file:
      - ../../orchestration/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://orchestration-service:8080/"]
      interval: 10s
      timeout: 20s
      retries: 5

  fhir-converter-service:
    build:
      context: ../../fhir-converter/
    ports:
      - "8082:8080"

  ingestion-service:
    platform: linux/amd64
    build:
      context: ../../ingestion
    ports:
      - "8083:8080"
    logging:
      driver: "json-file"
    environment:
      SMARTY_AUTH_ID: ${SMARTY_AUTH_ID}
      SMARTY_AUTH_TOKEN: ${SMARTY_AUTH_TOKEN}

  message-parser-service:
    platform: linux/amd64
    build:
      context: ../../message-parser
    ports:
      - "8085:8080"
    logging:
      driver: "json-file"

  trigger-code-reference-service:
    platform: linux/amd64
    build:
      context: ../../trigger-code-reference
    ports:
      - "8086:8080"
    logging:
      driver: "json-file"

  db:
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
      - ../sql/:/docker-entrypoint-initdb.d/
      - ./sql/:/docker-entrypoint-initdb.d/
      - ./sql/.pgpass/:/usr/local/lib/.pgpass
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 20

  # Next.js app
  ecr-viewer:
    build:
      context: ../../../
      dockerfile: ./containers/ecr-viewer/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:pw@db:5432/ecr_viewer_db}
      - APP_ENV=${APP_ENV:-prod}

  convert-data:
    build: .
    depends_on:
      orchestration-service:
        condition: service_healthy
    ports:
      - "8081:8081"
    env_file:
      - ../../ecr-viewer/.env.local
    volumes:
      - ./sql:/code/sql
      - ./baseECR:/code/baseECR

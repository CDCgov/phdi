version: "3.3"

services:
  orchestration-service:
    build:
      context: .
    depends_on:
      [
        validation-service,
        fhir-converter-service,
        ingestion-service,
        message-parser-service,
      ]
    ports:
      - "${ORCHESTRATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
    env_file:
      - .env
  validation-service:
    build:
      context: ../validation
    ports:
      - "${VALIDATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  fhir-converter-service:
    build:
      context: ../fhir-converter
    ports:
      - "${FHIR_CONVERTER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  ingestion-service:
    build:
      context: ../ingestion
    ports:
      - "${INGESTION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
    environment:
      SMARTY_AUTH_ID: ${SMARTY_AUTH_ID}
      SMARTY_AUTH_TOKEN: ${SMARTY_AUTH_TOKEN}
  message-parser-service:
    build:
      context: ../message-parser
    ports:
      - "${MESSAGE_PARSER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  db:
    extends:
      file: docker-compose-ecr-viewer.yml
      service: db
  seed-db:
    extends:
      file: docker-compose-ecr-viewer.yml
      service: seed-db
    depends_on:
      db:
        condition: service_healthy
  grafana:
    image: grafana/grafana-oss
    ports:
      - "4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - db
volumes:
  grafana_data:

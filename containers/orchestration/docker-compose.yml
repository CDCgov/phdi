version: "3.3"

services:
  orchestration-service:
    build:
      context: .
    depends_on:
      [
        validation-service,
        fhir-converter-service,
        ingestion-service,
        message-parser-service,
      ]
    ports:
      - "${ORCHESTRATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
    env_file:
      - .env
  validation-service:
    build:
      context: ../validation
    ports:
      - "${VALIDATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  fhir-converter-service:
    build:
      context: ../fhir-converter
    ports:
      - "${FHIR_CONVERTER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  ingestion-service:
    build:
      context: ../ingestion
    ports:
      - "${INGESTION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  message-parser-service:
    build:
      context: ../message-parser
    ports:
      - "${MESSAGE_PARSER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  # db:
  #   extends:
  #     file: docker-compose-ecr-viewer.yml
  #     service: db
  # seed-db:
  #   extends:
  #     file: docker-compose-ecr-viewer.yml
  #     service: seed-db
  # PostgreSQL database
  db:
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
      - ../ecr-viewer/seed-scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ../ecr-viewer/seed-scripts/.pgpass/:/usr/local/lib/.pgpass
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 20
    env_file:
      - .env

  # Python seeding
  seed-db:
    build:
      context: "../ecr-viewer/seed-scripts"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pw
      - POSTGRES_DB=ecr_viewer_db
      - DATABASE_CONNECTION=db
      - DATABASE_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

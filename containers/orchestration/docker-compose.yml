include:
  - ../ecr-viewer/docker-compose-orchestration.yml

services:
  orchestration-service:
    platform: linux/amd64
    build:
      context: .
    depends_on:
      [
        validation-service,
        fhir-converter-service,
        ingestion-service,
        message-parser-service,
        ecr-viewer,
      ]
    ports:
      - "${ORCHESTRATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
    env_file:
      - .env
  validation-service:
    build:
      context: ../validation
    ports:
      - "${VALIDATION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  fhir-converter-service:
    build:
      context: ../fhir-converter
    ports:
      - "${FHIR_CONVERTER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  ingestion-service:
    build:
      context: ../ingestion
    ports:
      - "${INGESTION_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
    environment:
      SMARTY_AUTH_ID: ${SMARTY_AUTH_ID}
      SMARTY_AUTH_TOKEN: ${SMARTY_AUTH_TOKEN}
  message-parser-service:
    build:
      context: ../message-parser
    ports:
      - "${MESSAGE_PARSER_PORT_NUMBER}:8080"
    logging:
      driver: "json-file"
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: "jaeger"
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    ports:
      - "16686:16686" # serves frontend and queries
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prom_data:/prometheus"
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: "otel-collector"
    volumes:
      - "./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml"
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    ports:
      - "8888:8888" # Prometheus metrics exposed by collector
      - "8889:8889" # Endpoint prometheus will scrape
      - "4317:4317" # gRPC OTLP receiver
      - "4318:4318" # HTTP OTLP receiver
    depends_on:
      - jaeger
      - prometheus
  grafana:
    image: grafana/grafana-oss
    ports:
      - "4000:3000"
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  prom_data:
  grafana_data:

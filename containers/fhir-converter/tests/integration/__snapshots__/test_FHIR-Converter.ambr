# serializer version: 1
# name: test_ecr_conversion
  dict({
    'FhirResource': dict({
      'entry': list([
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'author': list([
              dict({
                'reference': str,
              }),
            ]),
            'confidentiality': 'N',
            'custodian': dict({
              'reference': str,
            }),
            'date': '2012-09-16T19:11:00-04:00',
            'encounter': dict({
              'reference': str,
            }),
            'event': list([
              dict({
                'period': dict({
                  'end': '2012-09-16T19:11:00-04:00',
                  'start': '2012-09-09T19:11:00-04:00',
                }),
              }),
            ]),
            'extension': list([
              dict({
                'url': str,
                'valueString': '1',
              }),
            ]),
            'id': str,
            'identifier': dict({
              'type': dict({
                'coding': list([
                  dict({
                    'code': '28570-0',
                    'display': 'Procedure Note',
                    'system': 'http://loinc.org',
                  }),
                ]),
              }),
              'use': 'official',
              'value': 'sTT988',
            }),
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/ecr/StructureDefinition/eicr-composition',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Composition',
            'section': list([
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '51848-0',
                      'display': 'ASSESSMENT',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Assessment',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '18776-5',
                      'display': 'Treatment plan',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'entry': list([
                  dict({
                    'reference': str,
                  }),
                ]),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Plan of Treatment',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59768-2',
                      'display': 'PROCEDURE INDICATIONS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Procedure Indications',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59772-4',
                      'display': 'Planned Procedure',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Planned Procedure',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '29554-3',
                      'display': 'PROCEDURE DESCRIPTION',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'PROCEDURE DESCRIPTION',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '10219-4',
                      'display': 'SURGICAL OPERATION NOTE PREOPERATIVE DX',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'entry': list([
                  dict({
                    'display': 'Problem - Appendicitis',
                    'reference': str,
                  }),
                ]),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Preoperative Diagnosis',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59774-0',
                      'display': 'PROCEDURE ANESTHESIA',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Anesthesia',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '11537-8',
                      'display': 'SURGICAL DRAINS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Surgical Drains',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59776-5',
                      'display': 'PROCEDURE FINDINGS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Procedure Findings',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59770-8',
                      'display': 'PROCEDURE ESTIMATED BLOOD LOSS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Estimated Blood Loss',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59771-6',
                      'display': 'PROCEDURE IMPLANTS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Procedure Implants',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59773-2',
                      'display': 'PROCEDURE SPECIMENS TAKEN',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Specimens Taken',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '55109-3',
                      'display': 'Complications',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Complications',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '10218-6',
                      'display': 'POSTOPERATIVE DIAGNOSIS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Postoperative Diagnosis',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59769-0',
                      'display': 'POSTPROCEDURE DIAGNOSIS',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'entry': list([
                  dict({
                    'display': 'Problem - Sessile Polyp',
                    'reference': str,
                  }),
                  dict({
                    'display': 'Problem - diverticulosis of sigmoid',
                    'reference': str,
                  }),
                  dict({
                    'display': 'Problem - internal hemorrhoids',
                    'reference': str,
                  }),
                ]),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Postprocedure Diagnosis',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '59775-7',
                      'display': 'PROCEDURE DISPOSITION',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Procedure Disposition',
              }),
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '29762-2',
                      'display': 'Social History',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'entry': list([
                  dict({
                    'reference': str,
                  }),
                  dict({
                    'reference': str,
                  }),
                ]),
                'id': str,
                'mode': 'snapshot',
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Social History',
              }),
            ]),
            'status': 'final',
            'subject': dict({
              'reference': str,
            }),
            'title': 'Community Health and Hospitals: Procedure Note',
            'type': dict({
              'coding': list([
                dict({
                  'code': '28570-0',
                  'display': 'Procedure Note',
                  'system': 'http://loinc.org',
                }),
              ]),
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'class': dict({
              'code': '99213',
              'display': 'Evaluation and Management',
              'system': 'http://www.ama-assn.org/go/cpt',
            }),
            'id': str,
            'identifier': list([
              dict({
                'system': 'urn:oid:2.16.840.1.113883.19',
                'value': '9937012',
              }),
            ]),
            'location': list([
              dict({
                'id': str,
                'location': dict({
                  'display': 'None',
                  'reference': str,
                }),
              }),
            ]),
            'meta': dict({
              'source': 'ecr',
            }),
            'period': dict({
              'end': '2009-02-27T13:00:00-05:00',
              'start': '2009-02-27T13:00:00-05:00',
            }),
            'resourceType': 'Encounter',
            'status': 'unknown',
            'subject': dict({
              'reference': str,
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'id': str,
            'identifier': list([
              dict({
                'system': 'urn:ietf:rfc:3986',
                'value': 'urn:uuid:2.16.540.1.113883.19.2',
              }),
            ]),
            'meta': dict({
              'source': 'ecr',
            }),
            'resourceType': 'Location',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'address': list([
              dict({
                'city': 'Portland',
                'country': 'US',
                'line': list([
                  '1002 Healthcare Drive ',
                ]),
                'postalCode': '99123',
                'state': 'OR',
                'use': 'work',
              }),
            ]),
            'id': str,
            'identifier': list([
              dict({
                'system': 'http://hl7.org/fhir/sid/us-npi',
                'value': '99999999',
              }),
            ]),
            'meta': dict({
              'source': 'ecr',
            }),
            'name': 'Community Health and Hospitals',
            'resourceType': 'Organization',
            'telecom': list([
              dict({
                'system': 'phone',
                'use': 'work',
                'value': '555-555-1002',
              }),
            ]),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'address': list([
              dict({
                'city': 'Portland',
                'country': 'US',
                'line': list([
                  '1002 Healthcare Drive ',
                ]),
                'postalCode': '99123',
                'state': 'OR',
              }),
            ]),
            'id': str,
            'identifier': list([
              dict({
                'system': 'http://hl7.org/fhir/sid/us-npi',
                'value': '99999999',
              }),
            ]),
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner',
              ]),
              'source': 'ecr',
            }),
            'name': list([
              dict({
                'family': 'Seven',
                'given': list([
                  'Henry',
                ]),
              }),
            ]),
            'qualification': list([
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '200000000X',
                      'display': 'Allopathic & Osteopathic Physicians',
                      'system': 'http://nucc.org/provider-taxonomy',
                    }),
                  ]),
                }),
              }),
            ]),
            'resourceType': 'Practitioner',
            'telecom': list([
              dict({
                'system': 'phone',
                'use': 'work',
                'value': '555-555-1002',
              }),
            ]),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'address': list([
              dict({
                'city': 'Beaverton',
                'country': 'US',
                'line': list([
                  '1357 Amber Drive',
                ]),
                'postalCode': '97867',
                'state': 'OR',
                'use': 'home',
              }),
            ]),
            'birthDate': '2005-05-01',
            'communication': list([
              dict({
                'language': dict({
                  'coding': list([
                    dict({
                      'code': 'en',
                      'display': 'English',
                      'system': 'urn:ietf:bcp:47',
                    }),
                  ]),
                }),
                'preferred': True,
              }),
            ]),
            'deceasedBoolean': False,
            'extension': list([
              dict({
                'extension': list([
                  dict({
                    'url': str,
                    'valueCoding': dict({
                      'code': '1966-1',
                      'display': 'Aleut',
                    }),
                  }),
                  dict({
                    'url': str,
                    'valueString': 'Aleut',
                  }),
                ]),
                'url': str,
              }),
              dict({
                'extension': list([
                  dict({
                    'url': str,
                    'valueCoding': dict({
                      'code': '2186-5',
                      'display': 'Not Hispanic or Latino',
                    }),
                  }),
                  dict({
                    'url': str,
                    'valueString': 'Not Hispanic or Latino',
                  }),
                ]),
                'url': str,
              }),
              dict({
                'extension': list([
                  dict({
                    'url': str,
                    'valueCodeableConcept': dict({
                      'coding': list([
                        dict({
                          'code': 'F',
                          'display': 'Female',
                          'system': 'urn:oid:2.16.840.1.113883.5.1',
                        }),
                      ]),
                    }),
                  }),
                ]),
                'url': str,
              }),
            ]),
            'gender': 'female',
            'id': str,
            'identifier': list([
              dict({
                'system': 'urn:oid:2.16.840.1.113883.19.5.99999.2',
                'value': '998991',
              }),
              dict({
                'system': 'http://hl7.org/fhir/sid/us-ssn',
                'value': '111-00-2330',
              }),
            ]),
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient',
              ]),
              'source': 'ecr',
            }),
            'name': list([
              dict({
                'family': 'Jones',
                'given': list([
                  'Isabella',
                ]),
                'use': 'official',
              }),
            ]),
            'resourceType': 'Patient',
            'telecom': list([
              dict({
                'system': 'phone',
                'use': 'home',
                'value': '(816)276-6909',
              }),
            ]),
          }),
        }),
        dict({
          'fullUrl': str,
          'resource': dict({
            'meta': dict({
              'source': 'ecr',
            }),
            'resourceType': 'CareTeam',
            'subject': dict({
              'reference': str,
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'id': str,
            'intent': 'proposal',
            'meta': dict({
              'source': 'ecr',
            }),
            'resourceType': 'CarePlan',
            'status': 'unknown',
            'subject': dict({
              'reference': str,
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'address': list([
              dict({
                'city': 'Beaverton',
                'country': 'US',
                'line': list([
                  '1357 Amber Drive',
                ]),
                'postalCode': '97867',
                'state': 'OR',
                'use': 'home',
              }),
            ]),
            'id': str,
            'meta': dict({
              'source': 'ecr',
            }),
            'name': list([
              dict({
                'family': 'Jones',
                'given': list([
                  'Ralph',
                ]),
              }),
            ]),
            'patient': dict({
              'reference': str,
            }),
            'relationship': list([
              dict({
                'coding': list([
                  dict({
                    'code': 'GRPRN',
                    'display': 'Grandparent',
                    'system': 'urn:oid:2.16.840.1.113883.5.111',
                  }),
                ]),
              }),
            ]),
            'resourceType': 'RelatedPerson',
            'telecom': list([
              dict({
                'system': 'phone',
                'use': 'home',
                'value': '(816)276-6909',
              }),
            ]),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'category': list([
              dict({
                'coding': list([
                  dict({
                    'code': 'social-history',
                    'system': 'http://terminology.hl7.org/CodeSystem/observation-category',
                  }),
                ]),
              }),
            ]),
            'code': dict({
              'coding': list([
                dict({
                  'code': 'ASSERTION',
                  'system': 'urn:oid:2.16.840.1.113883.5.4',
                }),
              ]),
            }),
            'id': str,
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Observation',
            'status': 'final',
            'subject': dict({
              'reference': str,
            }),
            'valueCodeableConcept': dict({
              'coding': list([
                dict({
                  'code': '77386006',
                  'display': 'pregnant',
                  'system': 'http://snomed.info/sct',
                }),
              ]),
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'code': dict({
              'coding': list([
                dict({
                  'code': '76690-7',
                  'display': 'Sexual orientation',
                  'system': 'http://loinc.org',
                }),
              ]),
              'text': 'Sexual orientation',
            }),
            'id': str,
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-sexual-orientation',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Observation',
            'status': 'final',
            'subject': dict({
              'reference': str,
            }),
            'valueString': 'unknown',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'code': dict({
              'coding': list([
                dict({
                  'code': '420008001',
                  'display': 'Travel',
                  'system': 'http://snomed.info/sct',
                }),
              ]),
              'text': 'Travel History',
            }),
            'component': list([
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': 'LOC',
                      'display': 'Location',
                      'system': 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType',
                    }),
                  ]),
                }),
              }),
            ]),
            'effectivePeriod': dict({
              'end': '2018-02-18',
              'start': '2018-01-18',
            }),
            'id': str,
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/ecr/StructureDefinition/us-ph-travel-history',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Observation',
            'status': 'final',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Observation',
          }),
        }),
      ]),
      'resourceType': 'Bundle',
      'type': 'batch',
    }),
    'Status': 'OK',
  })
# ---
# name: test_ecr_conversion_with_rr
  dict({
    'FhirResource': dict({
      'entry': list([
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'extension': list([
              dict({
                'url': str,
              }),
            ]),
            'id': str,
            'identifier': dict({
              'use': 'official',
            }),
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/ecr/StructureDefinition/eicr-composition',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Composition',
            'section': list([
              dict({
                'code': dict({
                  'coding': list([
                    dict({
                      'code': '88085-6',
                      'display': 'Reportability response report Document Public health',
                      'system': 'http://loinc.org',
                    }),
                  ]),
                }),
                'extension': list([
                  dict({
                    'url': str,
                    'valueCodeableConcept': dict({
                      'type': dict({
                        'coding': list([
                          dict({
                            'code': '88085-6',
                            'display': 'Reportability response report Document Public health',
                            'system': 'http://loinc.org',
                          }),
                        ]),
                      }),
                      'use': 'official',
                    }),
                  }),
                  dict({
                    'url': str,
                    'valueCodeableConcept': dict({
                      'coding': list([
                        dict({
                          'code': 'RRVS19',
                          'display': 'eICR processed',
                          'system': 'urn:oid:2.16.840.1.114222.4.5.274',
                        }),
                      ]),
                    }),
                  }),
                ]),
                'id': str,
                'text': dict({
                  'div': str,
                  'status': 'generated',
                }),
                'title': 'Reportability Response Information Section',
              }),
            ]),
            'status': 'final',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'intent': 'proposal',
            'meta': dict({
              'source': 'ecr',
            }),
            'resourceType': 'CarePlan',
            'status': 'unknown',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'meta': dict({
              'profile': list([
                'http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults',
              ]),
              'source': 'ecr',
            }),
            'resourceType': 'Observation',
          }),
        }),
      ]),
      'resourceType': 'Bundle',
      'type': 'batch',
    }),
    'Status': 'OK',
  })
# ---
# name: test_vxu_conversion
  dict({
    'FhirResource': dict({
      'entry': list([
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'destination': list([
              dict({
                '_endpoint': dict({
                  'extension': list([
                    dict({
                      'url': str,
                      'valueCode': 'unknown',
                    }),
                  ]),
                }),
                'receiver': dict({
                  'reference': str,
                }),
              }),
            ]),
            'eventCoding': dict({
              'code': 'V04',
              'display': 'VXU^V04',
              'system': 'http://terminology.hl7.org/CodeSystem/v2-0003',
            }),
            'id': str,
            'meta': dict({
              'source': 'vxu',
              'tag': list([
                dict({
                  'code': 'P',
                  'system': 'http://terminology.hl7.org/CodeSystem/v2-0103',
                }),
              ]),
            }),
            'resourceType': 'MessageHeader',
            'sender': dict({
              'reference': str,
            }),
            'source': dict({
              '_endpoint': dict({
                'extension': list([
                  dict({
                    'url': str,
                    'valueCode': 'unknown',
                  }),
                ]),
              }),
              'name': 'WIR11.3.2',
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'activity': dict({
              'coding': list([
                dict({
                  'display': 'VXU^V04^',
                }),
              ]),
            }),
            'agent': list([
              dict({
                'type': dict({
                  'coding': list([
                    dict({
                      'code': 'author',
                      'system': 'http://terminology.hl7.org/CodeSystem/provenance-participant-type',
                    }),
                  ]),
                }),
                'who': dict({
                  'reference': str,
                }),
              }),
            ]),
            'id': str,
            'meta': dict({
              'source': 'vxu',
            }),
            'occurredDateTime': '2020-05-14T01:00:00-04:00',
            'recorded': '2020-05-14T01:00:00-04:00',
            'resourceType': 'Provenance',
            'target': list([
              dict({
                'reference': str,
              }),
            ]),
            'text': dict({
              'div': str,
              'status': 'generated',
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'id': str,
            'identifier': list([
              dict({
                'system': 'http://example.com/v2-to-fhir-converter/Identifier/WIR',
                'value': 'WIR',
              }),
            ]),
            'meta': dict({
              'source': 'vxu',
            }),
            'resourceType': 'Organization',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'id': str,
            'identifier': list([
              dict({
                'system': 'http://example.com/v2-to-fhir-converter/Identifier/WIRPH',
                'value': 'WIRPH',
              }),
            ]),
            'meta': dict({
              'source': 'vxu',
            }),
            'resourceType': 'Organization',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'active': True,
            'birthDate': '2018-08-08',
            'contact': list([
              dict({
                'address': dict({
                  'city': 'NEW GLARUS',
                  'state': 'WI',
                }),
              }),
            ]),
            'extension': list([
              dict({
                'url': str,
                'valueString': 'HEPB--DTAP',
              }),
            ]),
            'gender': 'male',
            'id': str,
            'identifier': list([
              dict({
                'type': dict({
                  'coding': list([
                    dict({
                      'code': 'SR',
                      'display': 'State registry ID',
                      'system': 'http://terminology.hl7.org/CodeSystem/v2-0203',
                    }),
                  ]),
                }),
                'value': '3054790',
              }),
              dict({
                'type': dict({
                  'coding': list([
                    dict({
                      'code': 'PI',
                      'display': 'Patient internal identifier',
                      'system': 'http://terminology.hl7.org/CodeSystem/v2-0203',
                    }),
                  ]),
                }),
              }),
            ]),
            'meta': dict({
              'source': 'vxu',
            }),
            'name': list([
              dict({
                'family': 'ZTEST',
                'given': list([
                  'PEDIARIX',
                ]),
              }),
            ]),
            'resourceType': 'Patient',
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'class': dict({
              'code': 'R',
              'display': 'Recurring patient',
              'system': 'http://terminology.hl7.org/CodeSystem/v2-0004',
            }),
            'id': str,
            'meta': dict({
              'source': 'vxu',
            }),
            'resourceType': 'Encounter',
            'status': 'in-progress',
            'subject': dict({
              'reference': str,
            }),
            'text': dict({
              'div': str,
              'status': 'generated',
            }),
          }),
        }),
        dict({
          'fullUrl': str,
          'request': dict({
            'method': 'PUT',
            'url': str,
          }),
          'resource': dict({
            'address': list([
              dict({
                'city': 'NEW GLARUS',
                'state': 'WI',
              }),
            ]),
            'id': str,
            'meta': dict({
              'source': 'vxu',
            }),
            'patient': dict({
              'reference': str,
            }),
            'relationship': list([
              dict({
                'coding': list([
                  dict({
                    'code': 'BRO',
                    'display': 'brother',
                    'system': 'http://terminology.hl7.org/CodeSystem/v3-RoleCode',
                  }),
                ]),
              }),
            ]),
            'resourceType': 'RelatedPerson',
          }),
        }),
      ]),
      'id': str,
      'identifier': dict({
        'value': '2020051411020600',
      }),
      'resourceType': 'Bundle',
      'timestamp': '2020-05-14T01:00:00-04:00',
      'type': 'batch',
    }),
    'Status': 'OK',
  })
# ---

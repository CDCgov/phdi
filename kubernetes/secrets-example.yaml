# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-user-msi
spec:
  provider: azure
  secretObjects:                                 # [OPTIONAL] SecretObject defines the desired state of synced K8s secret objects
  - secretName: <name for secrets to be grouped under>
    type: Opaque
    data:
    - objectName: <objectAlias from objects in parameters>   # name of the mounted content to sync. this could be the object name or object alias
      key: <key of object to be accessed from deployment apps>
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"          # Set to true for using managed identity
    userAssignedIdentityID: <client Id found by az aks show -g nick-temp -n <kubernetes-cluster-name> --query addonProfiles.azureKeyvaultSecretsProvider.identity.clientId -o tsv> # Set the clientID of the user-assigned managed identity to use
    keyvaultName: nick-temp-key      # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: <SECRET NAME FROM KEYVAULT> #name in keyvault
          objectAlias: <alias-name> #name referenced in secret objects
          objectType: secret        # object types: secret, key, or cert
          objectVersion: ""         # [OPTIONAL] object versions, default to latest if empty
    tenantId: <Tenant id, same as workspace id>              # The tenant ID of the key vault